openapi: 3.0.0
info:
  title: DRID Research Portal API
  description: |
    A research management API for DRID
    Authentication is handled via JWT access tokens and HTTP-only cookie refresh tokens.
  version: 1.0.0
  contact:
    name: DRID Support
    email: raymondomoyakhi@gmail.com

servers:
  - url: 'https://production_url/api/v1'
    description: Production server
  - url: 'http://localhost:3000/api/v1'
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, researcher]
        faculty:
          type: string
        bio:
          type: string
        title:
          type: string
        profilePicture:
          type: string
        isActive:
          type: boolean
        invitationStatus:
          type: string
          enum: [pending, accepted, added, expired]
        lastLogin:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        articles:
          type: array
          items:
            type: string

    Article:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
          maxLength: 255
        category:
          type: string
          enum: [Research, Innovation, Development]
        content:
          type: string
          maxLength: 10000
        cover_photo:
          type: string
        contributors:
          type: array
          items:
            $ref: '#/components/schemas/User'
        faculty:
          type: string
        department:
          type: string
        owner:
          type: string
        summary:
          type: string
          maxLength: 500
        publish_date:
          type: string
          format: date-time
        views:
          type: object
          properties:
            count:
              type: number
            viewers:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [draft, published, archived]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Faculty:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
          maxLength: 10
        title:
          type: string
          maxLength: 255
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Department:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
          maxLength: 10
        title:
          type: string
          maxLength: 255
        faculty:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    AdminAuthResponse:
      type: object
      properties:
        success:
          type: boolean
        accessToken:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            role:
              type: string

    ResearcherAuthResponse:
      type: object
      properties:
        success:
          type: boolean
        accessToken:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            role:
              type: string
            faculty:
              type: string
            title:
              type: string
            profilePicture:
              type: string
              
    ResearcherProfileResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            profile:
              $ref: '#/components/schemas/User'
            articles:
              type: array
              items:
                $ref: '#/components/schemas/Article'
            collaborators:
              type: array
              items:
                $ref: '#/components/schemas/User'
            stats:
              type: object
              properties:
                total_articles:
                  type: integer
                sole_author:
                  type: integer
                collaborations:
                  type: integer

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        code:
          type: string

paths:
  /:
    get:
      summary: API health check
      responses:
        '200':
          description: API is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /auth/admin/login:
    post:
      summary: Admin login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminAuthResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
                description: HTTP-only cookie containing refresh token
        '401':
          description: Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/researcher/login:
    post:
      summary: Researcher login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherAuthResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
                description: HTTP-only cookie containing refresh token
        '401':
          description: Invalid credentials or inactive account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/refresh-token:
    post:
      summary: Refresh access token using refresh token cookie
      tags:
        - Authentication
      responses:
        '200':
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  accessToken:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
                description: New HTTP-only refresh token cookie
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /auth/verify-token:
    get:
      summary: Verify the validity of an access token
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      name:
                        type: string
        '401':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      summary: Logout user and invalidate tokens
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Clears refresh token cookie

  /auth/complete-profile/{token}:
    post:
      summary: Complete researcher profile after invitation
      tags:
        - Authentication
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: Invitation token sent to researcher's email
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [name, faculty, bio, title]
              properties:
                name:
                  type: string
                  description: Researcher's full name
                faculty:
                  type: string
                  description: Faculty or department
                title:
                  type: string
                  description: Academic or professional title
                bio:
                  type: string
                  description: Interests and areas of expertise
                profilePicture:
                  type: string
                  format: binary
                  description: Profile picture (JPEG, PNG, or JPG, max 5MB)
      responses:
        '200':
          description: Profile completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid or expired token, or invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/researchers/invite:
    post:
      summary: Invite a researcher (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Invitation sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid request or email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/researchers/add:
    post:
      summary: Add a researcher profile manually (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [email, name, faculty, title]
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                  description: Researcher's full name
                faculty:
                  type: string
                  description: Faculty or department
                title:
                  type: string
                  description: Academic or professional title
                bio:
                  type: string
                  description: Interests and areas of expertise
                profilePicture:
                  type: string
                  format: binary
                  description: Profile picture (JPEG, PNG, or JPG, max 3MB)
      responses:
        '201':
          description: Researcher profile created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      faculty:
                        type: string
                      title:
                        type: string
        '400':
          description: Invalid request or email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/researchers:
    get:
      summary: Get all active researchers (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all active researchers
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                        faculty:
                          type: string
                        title:
                          type: string
                        profilePicture:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        lastLogin:
                          type: string
                          format: date-time
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/researchers/{id}:
    delete:
      summary: Delete a researcher profile (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the researcher to delete
      responses:
        '200':
          description: Researcher profile deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Researcher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/invitations:
    get:
      summary: Get all pending invitations (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all pending invitations
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                        status:
                          type: string
                          enum: [pending, expired]
                        created:
                          type: string
                          format: date
                        expires:
                          type: string
                          format: date
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/invitations/{id}/resend:
    post:
      summary: Resend an invitation (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the invitation to resend
      responses:
        '200':
          description: Invitation resent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Invitation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/invitations/{id}:
    delete:
      summary: Delete an invitation (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the invitation to delete
      responses:
        '200':
          description: Invitation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Invitation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /researcher/profile:
    get:
      summary: Get researcher's own profile
      tags:
        - Researcher
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Researcher profile with articles and collaborators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherProfileResponse'
        '401':
          description: Unauthorized - valid token required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /researcher/profile/{id}:
    get:
      summary: Get specific researcher profile (admin can view any, researcher only their own)
      tags:
        - Researcher
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the researcher
      responses:
        '200':
          description: Researcher profile with articles and collaborators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherProfileResponse'
        '401':
          description: Unauthorized - valid token required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - cannot view other researcher's profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Researcher profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /researcher/popular-articles:
    get:
      summary: Get researcher's own popular articles
      tags:
        - Researcher
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          description: Number of articles to return
      responses:
        '200':
          description: Popular articles sorted by view count
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
        '401':
          description: Unauthorized - valid token required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /researcher/popular-articles/{id}:
    get:
      summary: Get specific researcher's popular articles (admin can view any, researcher only their own)
      tags:
        - Researcher
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the researcher
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          description: Number of articles to return
      responses:
        '200':
          description: Popular articles sorted by view count
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
        '401':
          description: Unauthorized - valid token required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - cannot view other researcher's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /researcher/analytics:
    get:
      summary: Get researcher's own articles analytics
      tags:
        - Researcher
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Articles analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      totalArticles:
                        type: integer
                      totalViews:
                        type: integer
                      mostViewed:
                        oneOf:
                          - $ref: '#/components/schemas/Article'
                          - type: null
                      articlesByMonth:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: object
                              properties:
                                month:
                                  type: integer
                                year:
                                  type: integer
                            count:
                              type: integer
                      categoriesDistribution:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            count:
                              type: integer
        '401':
          description: Unauthorized - valid token required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /researcher/analytics/{id}:
    get:
      summary: Get specific researcher's analytics (admin can view any, researcher only their own)
      tags:
        - Researcher
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the researcher
      responses:
        '200':
          description: Articles analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      totalArticles:
                        type: integer
                      totalViews:
                        type: integer
                      mostViewed:
                        oneOf:
                          - $ref: '#/components/schemas/Article'
                          - type: null
                      articlesByMonth:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: object
                              properties:
                                month:
                                  type: integer
                                year:
                                  type: integer
                            count:
                              type: integer
                      categoriesDistribution:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            count:
                              type: integer
        '401':
          description: Unauthorized - valid token required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - cannot view other researcher's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /articles:
    get:
      summary: Get all articles with optional search
      tags:
        - Articles
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Optional search query for article title
      responses:
        '200':
          description: List of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      summary: Create a new article
      tags:
        - Articles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [title, category, content, faculty, department]
              properties:
                title:
                  type: string
                  description: Article title
                category:
                  type: string
                  enum: [Research, Innovation, Development]
                  description: Article category
                content:
                  type: string
                  description: Article content
                faculty:
                  type: string
                  description: Faculty code
                department:
                  type: string
                  description: Department code
                contributors:
                  type: array
                  items:
                    type: string
                  description: Array of contributor IDs (must be active researchers)
                summary:
                  type: string
                  description: Article summary (optional, defaults to first 100 chars of title)
                cover_photo:
                  type: string
                  format: binary
                  description: Cover photo for the article (JPEG, PNG, or JPG, max 3MB)
      responses:
        '200':
          description: Article created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input or contributors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Faculty or department not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /articles/dashboard:
    get:
      summary: Get dashboard data including category counts and recent articles
      tags:
        - Articles
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Optional search query for filtering recent articles
      responses:
        '200':
          description: Dashboard data
          content:
            application/json:
              schema:
                type: object
                properties:
                  category_counts:
                    type: object
                    properties:
                      Research:
                        type: integer
                      Innovation:
                        type: integer
                      Development:
                        type: integer
                  recent_articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  query:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /articles/{id}:
    get:
      summary: Get an article by its ID
      tags:
        - Articles
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the article
      responses:
        '200':
          description: Article details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    put:
      summary: Update an article
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the article to update
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Article title
                category:
                  type: string
                  enum: [Research, Innovation, Development]
                  description: Article category
                content:
                  type: string
                  description: Article content
                faculty:
                  type: string
                  description: Faculty code
                department:
                  type: string
                  description: Department code
                contributors:
                  type: array
                  items:
                    type: string
                  description: Array of contributor IDs (must be active researchers)
                summary:
                  type: string
                  description: Article summary
                cover_photo:
                  type: string
                  format: binary
                  description: Cover photo for the article (JPEG, PNG, or JPG, max 3MB)
      responses:
        '200':
          description: Article updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input or contributors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - only owner or admin can update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Article, faculty, or department not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      summary: Delete an article
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the article to delete
      responses:
        '200':
          description: Article deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Unauthorized - only owner or admin can delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /article-views/{id}/view:
    post:
      summary: Record a view for an article
      tags:
        - Article Views
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the article being viewed
      responses:
        '200':
          description: View recorded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /article-views/popular:
    get:
      summary: Get popular articles sorted by view count
      tags:
        - Article Views
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          description: Number of articles to return
      responses:
        '200':
          description: Popular articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /article-views/{id}/stats:
    get:
      summary: Get view statistics for an article
      tags:
        - Article Views
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the article
      responses:
        '200':
          description: View statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  articleId:
                    type: string
                  title:
                    type: string
                  viewCount:
                    type: integer
                  viewsByDay:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        count:
                          type: integer
                  uniqueVisitors:
                    type: integer
        '401':
          description: Unauthorized - valid token required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faculty:
    get:
      summary: Get all faculties
      tags:
        - Faculty
      responses:
        '200':
          description: List of all faculties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faculty'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /faculty/{code}:
    get:
      summary: Get a faculty by its code
      tags:
        - Faculty
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
          description: Code of the faculty
      responses:
        '200':
          description: Faculty details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
        '404':
          description: Faculty not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /department:
    get:
      summary: Get all departments
      tags:
        - Department
      responses:
        '200':
          description: List of all departments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /department/{code}:
    get:
      summary: Get a department by its code
      tags:
        - Department
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
          description: Code of the department
      responses:
        '200':
          description: Department details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        '404':
          description: Department not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'